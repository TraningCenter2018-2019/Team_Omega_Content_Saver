/*
 * This file is generated by jOOQ.
 */
package com.nc.contentsaver.processes.managing.model.tables;


import com.nc.contentsaver.processes.managing.model.Indexes;
import com.nc.contentsaver.processes.managing.model.Keys;
import com.nc.contentsaver.processes.managing.model.Public;
import com.nc.contentsaver.processes.managing.model.tables.records.DataCopyLinkRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataCopyLink extends TableImpl<DataCopyLinkRecord> {

    private static final long serialVersionUID = -524786404;

    /**
     * The reference instance of <code>public.data_copy_link</code>
     */
    public static final DataCopyLink DATA_COPY_LINK = new DataCopyLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DataCopyLinkRecord> getRecordType() {
        return DataCopyLinkRecord.class;
    }

    /**
     * The column <code>public.data_copy_link.id</code>.
     */
    public final TableField<DataCopyLinkRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('data_copy_link_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.data_copy_link.hash</code>.
     */
    public final TableField<DataCopyLinkRecord, String> HASH = createField("hash", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.data_copy_link</code> table reference
     */
    public DataCopyLink() {
        this(DSL.name("data_copy_link"), null);
    }

    /**
     * Create an aliased <code>public.data_copy_link</code> table reference
     */
    public DataCopyLink(String alias) {
        this(DSL.name(alias), DATA_COPY_LINK);
    }

    /**
     * Create an aliased <code>public.data_copy_link</code> table reference
     */
    public DataCopyLink(Name alias) {
        this(alias, DATA_COPY_LINK);
    }

    private DataCopyLink(Name alias, Table<DataCopyLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private DataCopyLink(Name alias, Table<DataCopyLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DataCopyLink(Table<O> child, ForeignKey<O, DataCopyLinkRecord> key) {
        super(child, key, DATA_COPY_LINK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DATA_COPY_LINK_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DataCopyLinkRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DATA_COPY_LINK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DataCopyLinkRecord> getPrimaryKey() {
        return Keys.DATA_COPY_LINK_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DataCopyLinkRecord>> getKeys() {
        return Arrays.<UniqueKey<DataCopyLinkRecord>>asList(Keys.DATA_COPY_LINK_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCopyLink as(String alias) {
        return new DataCopyLink(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCopyLink as(Name alias) {
        return new DataCopyLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DataCopyLink rename(String name) {
        return new DataCopyLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DataCopyLink rename(Name name) {
        return new DataCopyLink(name, null);
    }
}
